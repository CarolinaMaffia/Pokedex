{"version":3,"sources":["services/pokemon.js","helpers/pokemonTypes.js","components/pokemonCard/PokemonCard.js","assets/pokeball.png","components/searchBar/index.js","components/searchBar/SearchBar.js","assets/pokedex.png","pages/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","PokemonCard","pokemon","className","src","sprites","front_default","alt","name","charAt","toUpperCase","slice","types","map","type","i","style","backgroundColor","pokemonType","SearchBar","value","handleChange","Char","onChange","placeholder","Home","pokemonData","prev","next","useState","searchPokemon","setSearchPokemon","searchResult","setSearchResult","useEffect","results","filter","toLowerCase","includes","substring","length","pokedex","e","target","onClick","href","rel","App","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","response","previous","loadingPokemon","fetchData","all","pokemonRecord","_pokemonData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23483a02.chunk.js","sourcesContent":["export async function getAllPokemon(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        resolve(data);\n      })\n  });\n}\n\nexport async function getPokemon(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        resolve(data);\n      });\n  });\n}","const typeColors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: '#a4acaf',\n    psychic: '#f366b9',\n    steel: '#9eb7b',\n    dark: '#707070',\n    electric: '#eed535',\n    fighting: '#d56723',\n    flying: '#3dc7ef',\n    grass: '#9bcc50',\n    ice: '#51c4e7',\n    poison: '#b97fc9',\n    rock: '#a38c21',\n    water: '#4592c4'\n}\n\nexport default typeColors;","import React from 'react';\nimport './pokemonCard.scss';\nimport pokemonType from '../../helpers/pokemonTypes';\n\nconst PokemonCard = ({ pokemon }) => {\n    return (\n        <div className=\"pokemon-card-container\">\n            <div className=\"pokemon-section\">\n                <img className=\"pokemon-img\" src={pokemon.sprites.front_default} alt=\"pokemon card\" />\n                <h3> {pokemon.name.charAt(0).toUpperCase()+ pokemon.name.slice(1) } </h3>\n                <div className=\"type-container\">\n                    {pokemon.types.map((type, i) => {\n                        return <div className=\"card-type\" style={{ backgroundColor: pokemonType[type.type.name]}} key={i}>\n                            {type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1)}\n                        </div>\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PokemonCard;","export default __webpack_public_path__ + \"static/media/pokeball.3ad8d4f0.png\";","import SearchBar from './SearchBar';\n\nexport default SearchBar;","import React from 'react';\nimport Char from '../../assets/pokeball.png';\nimport './searchbar.scss';\n\n\nconst SearchBar = ({ value, handleChange }) => {\n\n\n    return (\n        <div className=\"searchbar-container\"> \n                        <img src={Char} alt=\"charmander\" className=\"ahre\" />\n            <input value={value} onChange={handleChange} type=\"text\" placeholder=\"Gotta catch em all\" >\n            </input>\n        </div>\n    )\n}\n\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/pokedex.beda6a95.png\";","import React, { useState, useEffect, useLayoutEffect } from 'react';\n\n// Components\nimport PokemonCard from '../../components/pokemonCard/PokemonCard';\nimport SearchBar from '../../components/searchBar';\n\n// Assets\nimport pokedex from '../../assets/pokedex.png';\nimport homePokeball from '../../assets/pokeball.png';\n\n// Styles\nimport './home.scss';\n\nconst Home = ({ pokemonData, prev, next }) => {\n\n    const [searchPokemon, setSearchPokemon] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    \n    const handleChange = e => {\n        setSearchPokemon(e.target.value);\n    };\n\n    useEffect(() => {\n        const results = pokemonData.filter(pokemon => searchPokemon.toLowerCase()\n        .includes(pokemon.name.toLowerCase().substring(0, searchPokemon.length))\n        );\n        setSearchResult(results);\n    }, [searchPokemon]);\n\n    return (\n        <div className=\"home-container\">        \n            <div className=\"main-icon-container\">\n                <img className=\"pokeball-icon\" src={pokedex} alt=\"home pokeball\" />\n            </div>\n            <div className=\"searchBar-container\">\n                <div className=\"search-bar\">\n                    <SearchBar value={searchPokemon} handleChange={handleChange} />\n                </div>\n            </div>\n        <div className=\"cards-section\">   \n            <div className=\"btn\">\n              <button onClick={prev}>Prev</button>\n              <button onClick={next}>next</button>\n            </div>\n\n            <div className=\"cards-container\">\n                {searchResult.map((pokemon, i) => {\n                    return <PokemonCard key={i}  pokemon={pokemon} />\n                })}\n            </div>\n        </div>\n            <div className=\"footer\">\n                <p> Made with ðŸ’– by <a href=\"https://github.com/CarolinaMaffia\" target=\"_blank\" rel=\"noreferrer\"> Caru </a> </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { getAllPokemon, getPokemon } from './services/pokemon.js';\n// import axios from 'axios';\nimport './App.css';\nimport Home from './pages/home/Home.js';\n\nconst App = ()  => {\n  //Hooks para la data de los pokemon\n  const [pokemonData, setPokemonData] =useState([]);\n  //Hooks para el next page\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  //Loader\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n  //Useeffect tiene dos argumentos, uno es una funcion y el segundo seria un dependency array??\n  useEffect(() => {\n//Cuando el componente se monta por primera vez se fetchea la data de la api \n//GetAllPokemon va a ser una funcion que se ocupe del fetching de la api de pokemon\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  //pagination\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }))\n\n    setPokemonData(_pokemonData);\n  }\n\n  return (\n    <div className=\"App\">\n      \n        {\n        // For a future loader\n         loading  ? <h1> Loading... </h1> : <Home pokemonData={pokemonData} prev={prev} next={next} /> \n        }\n      {/* <Home pokemonData={pokemonData} prev={prev} next={next} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}